<?php
/**
 * @file
 * Code for the Feature Tabbed Types feature.
 */

include_once 'feature_tabbed_types.features.inc';


/**
 *  Implements hook_node_view_alter().
 */
function feature_tabbed_types_node_view_alter(&$build) {
  switch ($build['#bundle']) {
    case 'basic_tabbed_page':
    case 'basic_tabbed_block':
      if (isset($build['field_tabbed_page_tabs'])) {
        $quicktab_settings = array(
          'style' => $build['field_tab_style'][0]['#markup'],
          'hide_empty_tabs' => TRUE,
          'ajax' => TRUE,
        );
        unset($build['field_tab_style']);
        $tabs = array();
        foreach ($build['field_tabbed_page_tabs']['#items'] as $key => $item) {
          $tabs[] = array(
            'title' => $build['field_tabbed_page_tabs'][$key]['entity']['field_collection_item'][$item['value']]['field_tab_label']['#items'][0]['value'],
            'contents' => array(
              '#markup' => $build['field_tabbed_page_tabs'][$key]['entity']['field_collection_item'][$item['value']]['field_tab_body']['#items'][0]['value']
            )
          );
        }
        $quicktab = quicktabs_build_quicktabs('qt_node_' . $build['#node']->nid, $quicktab_settings, $tabs);
        $build['field_tabbed_page_tabs'] = $quicktab;
      }
      break;

  }
}